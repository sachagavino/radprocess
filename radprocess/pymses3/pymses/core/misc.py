# -*- coding: utf-8 -*-
#   This file is part of PyMSES.
#
#   PyMSES is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   PyMSES is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with PyMSES.  If not, see <http://www.gnu.org/licenses/>.

import numpy as N
from scipy.interpolate import interp1d

__y_quad = N.array(
    [0.000000000000e+00, 1.027933735307e-09, 3.503098016555e-08, 2.826021286968e-07, 1.262035084435e-06,
     4.071601099999e-06, 1.068470737544e-05, 2.429636522003e-05, 4.971706091374e-05, 9.380765586514e-05,
     1.659464300877e-04, 2.785169181610e-04, 4.474028696635e-04, 6.924745988704e-04, 1.038049272196e-03,
     1.513306411609e-03, 2.152639153653e-03, 2.995921668627e-03, 4.088673667450e-03, 5.482104138903e-03,
     7.233018378235e-03, 9.403574975897e-03, 1.206088269283e-02, 1.527643099112e-02, 1.912535232622e-02,
     2.368551902646e-02, 2.903648255545e-02, 3.525826802472e-02, 4.243004183827e-02, 5.062867514219e-02,
     5.992723015506e-02, 7.039340030799e-02, 8.208793827778e-02, 9.506310831993e-02, 1.093612006913e-01,
     1.250131463105e-01, 1.420372690850e-01, 1.604382115222e-01, 1.802060663446e-01, 2.013157429090e-01,
     2.237265923652e-01, 2.473823098000e-01, 2.722111252519e-01, 2.981262886161e-01, 3.250268462876e-01,
     3.527987001148e-01, 3.813159320753e-01, 4.104423712440e-01, 4.400333733218e-01, 4.699377774066e-01,
     5.000000000000e-01, 5.300622225934e-01, 5.599666266782e-01, 5.895576287560e-01, 6.186840679247e-01,
     6.472012998852e-01, 6.749731537124e-01, 7.018737113839e-01, 7.277888747481e-01, 7.526176902000e-01,
     7.762734076348e-01, 7.986842570910e-01, 8.197939336554e-01, 8.395617884778e-01, 8.579627309150e-01,
     8.749868536895e-01, 8.906387993087e-01, 9.049368916801e-01, 9.179120617222e-01, 9.296065996920e-01,
     9.400727698449e-01, 9.493713248578e-01, 9.575699581617e-01, 9.647417319753e-01, 9.709635174445e-01,
     9.763144809735e-01, 9.808746476738e-01, 9.847235690089e-01, 9.879391173072e-01, 9.905964250241e-01,
     9.927669816218e-01, 9.945178958611e-01, 9.959113263325e-01, 9.970040783314e-01, 9.978473608463e-01,
     9.984866935884e-01, 9.989619507278e-01, 9.993075254011e-01, 9.995525971303e-01, 9.997214830818e-01,
     9.998340535699e-01, 9.999061923441e-01, 9.999502829391e-01, 9.999757036348e-01, 9.999893152926e-01,
     9.999959283989e-01, 9.999987379649e-01, 9.999997173979e-01, 9.999999649690e-01, 9.999999989721e-01,
     1.000000000000e+00])

__y_square = N.array(
    [0.000000000000e+00, 3.042071951086e-06, 2.503881267631e-05, 8.685495010301e-05, 2.113843135386e-04,
     4.234691667598e-04, 7.497970073027e-04, 1.218775082779e-03, 1.860383114088e-03, 2.706004954537e-03,
     3.788240150419e-03, 5.140696599957e-03, 6.797765730940e-03, 8.794381830376e-03, 1.116576735948e-02,
     1.394716627192e-02, 1.717356752013e-02, 2.087942108185e-02, 2.509834896435e-02, 2.986285374626e-02,
     3.520402729402e-02, 4.115126234167e-02, 4.773196964696e-02, 5.497130343389e-02, 6.289189780084e-02,
     7.151361671468e-02, 8.085332012498e-02, 9.092464861883e-02, 1.017378288976e-01, 1.132995021925e-01,
     1.256125775468e-01, 1.386761116862e-01, 1.524852169644e-01, 1.670309986293e-01, 1.823005223904e-01,
     1.982768129940e-01, 2.149388842297e-01, 2.322618005011e-01, 2.502167697977e-01, 2.687712676117e-01,
     2.878891910488e-01, 3.075310420968e-01, 3.276541387341e-01, 3.482128522961e-01, 3.691588692601e-01,
     3.904414753766e-01, 4.120078598562e-01, 4.338034371243e-01, 4.557721834895e-01, 4.778569859186e-01,
     5.000000000000e-01, 5.221430140814e-01, 5.442278165105e-01, 5.661965628757e-01, 5.879921401438e-01,
     6.095585246234e-01, 6.308411307399e-01, 6.517871477039e-01, 6.723458612659e-01, 6.924689579032e-01,
     7.121108089512e-01, 7.312287323883e-01, 7.497832302023e-01, 7.677381994989e-01, 7.850611157703e-01,
     8.017231870060e-01, 8.176994776096e-01, 8.329690013707e-01, 8.475147830356e-01, 8.613238883138e-01,
     8.743874224532e-01, 8.867004978075e-01, 8.982621711024e-01, 9.090753513812e-01, 9.191466798750e-01,
     9.284863832853e-01, 9.371081021992e-01, 9.450286965661e-01, 9.522680303530e-01, 9.588487376583e-01,
     9.647959727060e-01, 9.701371462537e-01, 9.749016510356e-01, 9.791205789181e-01, 9.828264324799e-01,
     9.860528337281e-01, 9.888342326405e-01, 9.912056181696e-01, 9.932022342691e-01, 9.948593034000e-01,
     9.962117598496e-01, 9.972939950455e-01, 9.981396168859e-01, 9.987812249172e-01, 9.992502029927e-01,
     9.995765308332e-01, 9.997886156865e-01, 9.999131450499e-01, 9.999749611873e-01, 9.999969579280e-01,
     1.000000000000e+00])


def random_sinc_dist(shape, power=2):
    """
    Return a sinc**2 or sinc**4-distributed centered (in [-0.5, 0.5]) random shifts array

    shape: ``list``
        shape of the required shift array
    power: ``int``
        power of the sinc() distribution. Default 2. Otherwise 4.
    """
    x = N.linspace(0.0, 1.0, 101)
    if power == 2:
        I = interp1d(__y_square, x, copy=False)
    else:
        I = interp1d(__y_quad, x, copy=False)

    new_x = N.random.uniform(size=shape)
    return I(new_x) - 0.5


__all__ = ["random_sinc_dist"]
